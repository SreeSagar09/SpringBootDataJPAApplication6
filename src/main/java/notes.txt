A Program to show how to work with @Query annotation:
Programs:
* SpringBootDataJPAApplication6Application.java
* Employee.java
* EmployeeRepository.java
* TestRunner.java
Notes:
* When we use nativeQuery true then we have write query in native sql query.
Output:
From run method in TestRunner class.
---- To get record by getEmployeeByEmployeeId(Integer employeeId) method ----
Hibernate: select * from employee e where e.employee_id = ?
6 --> Rakesh[A006]
---- To get records by getEmployeesByDesignation(String desination) method ----
Hibernate: select * from employee e where e.designation = ?
1 --> Sree Sagar[A001] --> Software Engineer
2 --> Sathish[A002] --> Software Engineer
6 --> Rakesh[A006] --> Software Engineer
---- To get records by getAllEmployees() method ----
Hibernate: select e.employee_name from employee e
Sree Sagar
Sathish
Pavan
Aravind
Pavan
Rakesh
---- To get records by getEmployeeByIds(List<Integer> employeeIdList) method ----
Hibernate: select employee0_.employee_id as employee1_0_, employee0_.age as age2_0_, employee0_.designation as designat3_0_, employee0_.employee_code as employee4_0_, employee0_.employee_name as employee5_0_ from employee employee0_ where employee0_.employee_id in (? , ? , ?)
2 --> Sathish[A002] --> Software Engineer
4 --> Aravind[A004] --> QA Engineer
6 --> Rakesh[A006] --> Software Engineer
---- To get records by getEmployeeByEmployeeCode(@Param("employeeCode") List<String> employeeCodeList) method ----
Hibernate: select employee0_.employee_id as employee1_0_, employee0_.age as age2_0_, employee0_.designation as designat3_0_, employee0_.employee_code as employee4_0_, employee0_.employee_name as employee5_0_ from employee employee0_ where employee0_.employee_code in (? , ? , ?)
1 --> Sree Sagar[A001] --> Software Engineer
5 --> Pavan[A005] --> QA Engineer
6 --> Rakesh[A006] --> Software Engineer
From main method in SpringBootDataJPAApplication6Application class.
